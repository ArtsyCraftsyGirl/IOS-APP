workflows:
  ios-workflow:
    name: iOS Workflow
    max_build_duration: 120
    integrations:
      app_store_connect: Codemagic
    environment:
      xcode: latest
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.jbpaladinpatriotsclock.jbpaladinpatriotsclock
      vars:
        APP_STORE_APPLE_ID: "XAJF22HXCQ" # Ensure this is the correct App Store ID
        XCODE_WORKSPACE: "JbPaladinPatriotsClock.xcworkspace"
        XCODE_SCHEME: "JbPaladinPatriotsClock"
    scripts:
      - name: Switch to System Ruby
        script: |
          set -e
          if command -v rvm > /dev/null; then
            rvm use system
          elif command -v chruby > /dev/null; then
            chruby system
          fi

      - name: Install npm dependencies
        script: |
          set -e
          npm install

      - name: Add iOS platform
        script: |
          set -e
          cordova platform add ios@latest

      - name: Debug iOS Platform Files
        script: |
          set -e
          echo "Checking the contents of the platforms/ios directory:"
          ls -la platforms/ios

      - name: Ensure iOS Deployment Target is 12.0
        script: |
          set -e
          if [ -f platforms/ios/Podfile ]; then
            echo "Found Podfile, updating iOS deployment target..."
            sed -i '' "s/platform :ios, '11.0'/platform :ios, '12.0'/" platforms/ios/Podfile
          else
            echo "Podfile not found. Skipping Podfile update."
          fi
          
          sed -i '' "s/IPHONEOS_DEPLOYMENT_TARGET = 11.0;/IPHONEOS_DEPLOYMENT_TARGET = 12.0;/" platforms/ios/JbPaladinPatriotsClock.xcodeproj/project.pbxproj
          sed -i '' "s/IPHONEOS_DEPLOYMENT_TARGET = 11.0;/IPHONEOS_DEPLOYMENT_TARGET = 12.0;/" platforms/ios/CordovaLib/CordovaLib.xcodeproj/project.pbxproj

      - name: Install CocoaPods
        script: |
          set -e
          gem install cocoapods -v 1.12.0
          if [ -f platforms/ios/Podfile ]; then
            cd platforms/ios
            pod install || pod install --repo-update
          else
            echo "No Podfile found, skipping pod install."
          fi

      - name: Clean Build
        script: |
          set -e
          echo "Cleaning previous build artifacts..."
          cordova clean ios

      - name: Set up code signing settings on Xcode project
        script: |
          set -e
          xcode-project use-profiles

      - name: Verify Signing Identities
        script: |
          set -e
          security find-identity -p codesigning -v

      - name: Create build.json
        script: |
          set -e
          echo '{
            "ios": {
              "developmentTeam": "XAJF22HXCQ",
              "codeSignIdentity": "Apple Distribution",  
              "provisioningProfile": "my_app_provisioning_2025",  
              "packageType": "app-store"
            }
          }' > build.json

      - name: Create exportOptions.plist
        script: |
          set -e
          echo '<?xml version="1.0" encoding="UTF-8"?>' > exportOptions.plist
          echo '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">' >> exportOptions.plist
          echo '<plist version="1.0">' >> exportOptions.plist
          echo '<dict>' >> exportOptions.plist
                  echo '    <key>method</key>' >> exportOptions.plist
          echo '    <string>app-store</string>' >> exportOptions.plist
          echo '    <key>provisioningProfiles</key>' >> exportOptions.plist
          echo '    <dict>' >> exportOptions.plist
          echo '        <key>com.jbpaladinpatriotsclock.jbpaladinpatriotsclock</key>' >> exportOptions.plist
          echo '        <string>my_app_provisioning_2025</string>' >> exportOptions.plist  # Updated reference name
          echo '    </dict>' >> exportOptions.plist
          echo '    <key>signingStyle</key>' >> exportOptions.plist
          echo '    <string>manual</string>' >> exportOptions.plist
          echo '    <key>teamID</key>' >> exportOptions.plist
          echo '    <string>XAJF22HXCQ</string>' >> exportOptions.plist
          echo '    <key>uploadBitcode</key>' >> exportOptions.plist
          echo '    <true/>' >> exportOptions.plist
          echo '    <key>compileBitcode</key>' >> exportOptions.plist
          echo '    <true/>' >> exportOptions.plist
          echo '    <key>uploadSymbols</key>' >> exportOptions.plist
          echo '    <true/>' >> exportOptions.plist
          echo '</dict>' >> exportOptions.plist
          echo '</plist>' >> exportOptions.plist

      - name: Print Working Directory
        script: |
          set -e
          pwd
          ls -la

      - name: Build iOS App
        script: |
          set -e
          cordova build ios --device --release --buildConfig=./build.json --exportOptionsPlist=./exportOptions.plist

    artifacts:
      - platforms/ios/build/device/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
