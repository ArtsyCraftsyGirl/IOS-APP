workflows:
  ios-workflow:
    name: iOS Workflow
    max_build_duration: 120
    environment:
      groups:
        - ios_credentials
        - appstore_credentials
      ios_signing:
        provisioning_profiles:
          - Production Profile
        certificates:
          - JbPaladin Certificate

    integrations:
      app_store_connect: Codemagic       

    scripts:
      - name: Install npm dependencies and update Cordova version
        script: | 
          npm install
          npm install -g cordova

      - name: Install Cordova Splash Screen Plugin
        script: |
          cordova plugin add cordova-plugin-splashscreen

      - name: Setup Cordova iOS platform
        script: | 
          cordova platform remove ios --nosave
          cordova platform add ios \
            --confirm \
            --no-interactive \
            --save  

      - name: Set App Uses Non-Exempt Encryption in Info.plist
        script: |
          INFO_PLIST_PATH="platforms/ios/JbPaladinPatriotsClock/Info.plist"
          if [ -f "$INFO_PLIST_PATH" ]; then
            /usr/libexec/PlistBuddy -c "Add :ITSAppUsesNonExemptEncryption bool false" "$INFO_PLIST_PATH" || echo "Key already exists or error occurred."
            echo "‚úÖ ITSAppUsesNonExemptEncryption set to false in Info.plist."
          else
            echo "‚ö†Ô∏è Info.plist not found!"
          fi

      - name: Copy custom splash screens to the Xcode project
        script: | 
          SPLASH_SCREEN_PATH="res/screen/ios/splash/"
          IOS_SPLASH_PLATFORM_PATH="platforms/ios/JbPaladinPatriotsClock/Images.xcassets/Splash.imageset/"

          if [ -d "$SPLASH_SCREEN_PATH" ]; then
            cp -R "$SPLASH_SCREEN_PATH" "$IOS_SPLASH_PLATFORM_PATH"
            echo "‚úÖ Custom splash screens copied successfully."
          else
            echo "‚ö†Ô∏è Custom splash screens folder not found!"
          fi

      - name: Copy custom app icons to AppIcon.appiconset
        script: |
          ICON_SOURCE_PATH="res/AppIcon.appiconset"
          ICON_DEST_PATH="platforms/ios/JbPaladinPatriotsClock/Images.xcassets/AppIcon.appiconset/"

          if [ -d "$ICON_SOURCE_PATH" ]; then
            rm -rf "$ICON_DEST_PATH"
            mkdir -p "$ICON_DEST_PATH"
            cp -R "$ICON_SOURCE_PATH/"* "$ICON_DEST_PATH"
            echo "‚úÖ App icons copied to AppIcon.appiconset."
          else
            echo "‚ö†Ô∏è Icon source directory not found!"
          fi

      - name: Set up code signing settings on Xcode project
        script: | 
          xcode-project use-profiles --project platforms/ios/JbPaladinPatriotsClock.xcodeproj

      - name: Build ipa for distribution
        script: | 
          cat /Users/builder/export_options.plist
          package_type=$(defaults read /Users/builder/export_options.plist method)
          identity=$(defaults read /Users/builder/export_options.plist signingCertificate)
          team=$(defaults read /Users/builder/export_options.plist teamID)
          profile=$(find '/Users/builder/Library/MobileDevice/Provisioning Profiles' -name "*.mobileprovision")
          profile_uuid=$(grep UUID -A1 -a "$profile" | grep -io "[-A-F0-9]\{36\}")

          cat > build.json <<EOF
          {
            "ios": {
              "release": {
                "codeSignIdentity": "$identity",
                "developmentTeam": "$team",
                "packageType": "$package_type",
                "provisioningProfile": "$profile_uuid"
              }
            }
          }
          EOF
          cordova build ios --release --device --buildConfig='build.json'

      - name: Remove 'audio' background mode from built .ipa Info.plist
        script: |
          IPA_PATH="/Users/builder/clone/platforms/ios/build/Release-iphoneos/JbPaladinPatriotsClock.ipa"
          WORK_DIR="/tmp/ipa_mod"

          echo "üîç Extracting IPA..."
          mkdir -p "$WORK_DIR"
          unzip -q "$IPA_PATH" -d "$WORK_DIR"

          APP_PATH=$(find "$WORK_DIR/Payload" -name "*.app" -type d | head -n 1)
          INFO_PLIST_PATH="$APP_PATH/Info.plist"

          if [ -f "$INFO_PLIST_PATH" ]; then
            echo "üîß Modifying Info.plist at $INFO_PLIST_PATH"

            index=0
            while true; do
              mode=$(/usr/libexec/PlistBuddy -c "Print :UIBackgroundModes:$index" "$INFO_PLIST_PATH" 2>/dev/null)
              if [ $? -ne 0 ]; then break; fi
              if [ "$mode" == "audio" ]; then
                /usr/libexec/PlistBuddy -c "Delete :UIBackgroundModes:$index" "$INFO_PLIST_PATH"
                echo "‚úÖ Removed 'audio' from UIBackgroundModes."
              else
                index=$((index + 1))
              fi
            done

            # Remove the whole key if now empty
            count=$(/usr/libexec/PlistBuddy -c "Print :UIBackgroundModes" "$INFO_PLIST_PATH" 2>/dev/null | grep -c "String")
            if [ "$count" -eq 0 ]; then
              /usr/libexec/PlistBuddy -c "Delete :UIBackgroundModes" "$INFO_PLIST_PATH"
              echo "üßπ Removed empty UIBackgroundModes array."
            fi
          else
            echo "‚ùå Info.plist not found in built .ipa"
          fi

          echo "üì¶ Repackaging IPA..."
          cd "$WORK_DIR"
          zip -qry "JbPaladinPatriotsClock.ipa" Payload
          mv "JbPaladinPatriotsClock.ipa" "$IPA_PATH"
          echo "‚úÖ Patched .ipa saved at $IPA_PATH"

    artifacts:
      - /Users/builder/clone/platforms/ios/build/Release-iphoneos/JbPaladinPatriotsClock.ipa
      - /tmp/xcodebuild_logs/*.log

    publishing:
      app_store_connect:
        auth: integration
        submit_to_app_store: true
